import os
import yaml
import glob


OUTDIR_TMP = os.path.join(os.getcwd(), "get_cami2_data", "data")
OUTDIR =  os.path.join(os.getcwd(), "data")
CONFIG = os.path.join(os.getcwd(), "config")

with open(os.path.join(CONFIG, "cami2_datasets.yml"), "r") as f:
    datasets_config = yaml.safe_load(f)

ALL_DATASETS = [d["name"] for d in datasets_config["datasets"]]


# Get DATASET from command-line argument or default to "all"
DATASET = config.get("DATASET", "all")
DATASETS = ALL_DATASETS if DATASET == "all" else [DATASET]

print(DATASETS)

for dataset in DATASETS:

    SAMPLES = ['4', '27']

    rule concatenate:
        input:
            expand(os.path.join(OUTDIR, DATASET, "{sample}_anonymous_gsa.fasta.gz"), samples=SAMPLES) 
        output:
        os.path.join(OUTDIR, DATASET, "catalogue.fna.gz")
        conda:
            "cami2_environment.yml"

        shell:
            """
            python src/concatenate.py {output} {input} -m 2500
        """

# rule alignment:
#     input:
#         r1=os.path.join(OUTDIR,DATASET, "knead/{sample}/{sample}_1_kneaddata_paired_1.fastq"),
#         r2=os.path.join(OUTDIR,DATASET, "knead/{sample}/{sample}_1_kneaddata_paired_2.fastq"),
#         contig_catalouge=os.path.join(OUTDIR,DATASET,"global_contig_catalogue.fna.gz")
#     output:
#         os.path.join(OUTDIR, DATASET, "algn/{sample}_sorted.bam"),
#     benchmark:
#         "benchmarks/alignment/{sample}.txt"
#     threads:
#         8
#     conda:
#         os.path.join(OUTDIR, "envs/strobealign.yaml")
#     shell:
#         """
#         strobealign -t {threads} {input.contig_catalouge} {input.r1} {input.r2} | samtools sort -o {output}
#         """



# rule concatenate:
#     input:
#         lambda wildcards: expand(os.path.join(OUTDIR, wildcards.dataset, "spades/asm_{sample}/contigs.fasta"),
#                                  sample=get_samples(wildcards.dataset))
#     output:
#         os.path.join(OUTDIR, "{dataset}", "global_contig_catalogue.fna.gz")
#     conda:
#         os.path.join(OUTDIR, "envs/concatenate.yaml")
#     shell:
#         """
#         python scripts/concatenate.py {output} {input} -m 0
#         """

# rule alignment:
#     input:
#         r1=os.path.join(OUTDIR, "{dataset}", "knead/{sample}/{sample}_1_kneaddata_paired_1.fastq"),
#         r2=os.path.join(OUTDIR, "{dataset}", "knead/{sample}/{sample}_1_kneaddata_paired_2.fastq"),
#         contig_catalogue=os.path.join(OUTDIR, "{dataset}", "global_contig_catalogue.fna.gz")
#     output:
#         os.path.join(OUTDIR, "{dataset}", "algn/{sample}_sorted.bam")
#     benchmark:
#         os.path.join("benchmarks/alignment", "{dataset}_{sample}.txt")
#     threads:
#         8
#     conda:
#         os.path.join(OUTDIR, "envs/strobealign.yaml")
#     shell:
#         """
#         strobealign -t {threads} {input.contig_catalogue} {input.r1} {input.r2} | samtools sort -o {output}
#         """
