import os
import yaml
import glob

OUTDIR_TMP = os.path.join(os.getcwd(), "get_cami2_data", "data")
OUTDIR = os.path.join(os.getcwd(), "data", "cami2")
CONFIG = os.path.join(os.getcwd(), "config")

with open(os.path.join(CONFIG, "cami2_datasets.yml"), "r") as f:
    datasets_config = yaml.safe_load(f)

ALL_DATASETS = [d["name"] for d in datasets_config["datasets"]]
DATASET = config.get("DATASET", "all")
#DATASETS = ALL_DATASETS if DATASET == "all" else [DATASET]

SAMPLES = {d["name"]: d.get("samples", []) for d in datasets_config["datasets"]}
sample_str = ' '.join(SAMPLES.get(DATASET, []))


rule all:
    input:
        # expand(os.path.join(OUTDIR_TMP, DATASET, "{sample}_contigs.fasta"), sample=[sample for sample in SAMPLES.get(DATASET, [])]),
        # expand(os.path.join(OUTDIR_TMP, DATASET, "{sample}_reads.fq.gz"),  sample=[sample for sample in SAMPLES.get(DATASET, [])]),
        # os.path.join(OUTDIR, DATASET, "catalogue.fna.gz")
        #expand(os.path.join(OUTDIR, DATASET, "{sample}_sorted.bam"), sample=[sample for sample in SAMPLES.get(DATASET, [])])
        os.path.join(OUTDIR, DATASET, "semibin/catalogue_semibin.fna.gz")
        #expand(os.path.join(OUTDIR, DATASET, "semibin/{sample}_sorted.bam"), sample=[sample for sample in SAMPLES.get(DATASET, [])])


# rule download_name:
#     output:
#         contigs=expand(os.path.join(OUTDIR_TMP, DATASET, "{sample}_contigs.fasta"), sample=SAMPLES.get(DATASET, [])),
#         reads=expand(os.path.join(OUTDIR_TMP, DATASET, "{sample}_reads.fq.gz"), sample=SAMPLES.get(DATASET, []))
#     conda:
#         "cami2_environment.yml"
#     shell:
#         """
#         python get_cami2_data/get_cami2_data.py {DATASET} {sample_str}
#         """



# rule concatenate:
#     input:
#         expand(os.path.join(OUTDIR_TMP, DATASET, "{sample}_contigs.fasta"), sample=SAMPLES.get(DATASET, []))
#     output:
#         os.path.join(OUTDIR, DATASET, "catalogue.fna.gz")
#     conda:
#         "cami2_environment.yml"
#     shell:
#         """
#         python src/concatenate.py {output} {input}
#         """


# rule alignment:
#     input:
#         read=os.path.join(OUTDIR_TMP, DATASET, "{sample}_reads.fq.gz"),
#         catalogue=os.path.join(OUTDIR, DATASET, "catalogue.fna.gz")
#     output:
#         os.path.join(OUTDIR, DATASET, "{sample}_sorted.bam")
#     threads:
#         96
#     conda:
#         "cami2_environment.yml"
#     shell:
#         """
#         strobealign -t {threads} {input.catalogue} {input.read} | samtools sort -o {output}
#         """


rule concatenate_process_semibin:
    input:
        os.path.join(OUTDIR, DATASET, "catalogue.fna.gz")
    output:
        os.path.join(OUTDIR, DATASET, "semibin/catalogue_semibin.fna")
    conda:
        "cami2_environment.yml"
    shell:
        """
        zcat {input} | sed 's/\([0-9]\)\([A-Za-z]\)/\1:\2/' > {output}
        """


# rule bam_process_semibin:
#     input:
#         bam=os.path.join(OUTDIR, DATASET, "{sample}_sorted.bam")
#     output:
#         modified_bam=os.path.join(OUTDIR, DATASET, "semibin/{sample}_sorted_semibin.bam")
#     conda:
#         "cami2_environment.yml"
#     shell:
#         """
#         samtools view -H {input.bam} | \
#         sed 's/\([0-9]\)\([A-Za-z]\\)/\\1:\\2/' | \
#         samtools reheader - {input.bam} > {output.modified_bam}
#         """





    

