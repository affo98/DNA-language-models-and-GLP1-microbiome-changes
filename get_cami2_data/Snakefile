import os
import yaml
import glob

OUTDIR_TMP = os.path.join(os.getcwd(), "get_cami2_data", "data")
OUTDIR = os.path.join(os.getcwd(), "data", "cami2")
CONFIG = os.path.join(os.getcwd(), "config")

with open(os.path.join(CONFIG, "cami2_datasets.yml"), "r") as f:
    datasets_config = yaml.safe_load(f)

ALL_DATASETS = [d["name"] for d in datasets_config["datasets"]]

# Get DATASET from command-line argument or default to "all"
DATASET = config.get("DATASET", "all")
DATASETS = ALL_DATASETS if DATASET == "all" else [DATASET]

# Define samples for each dataset
SAMPLES = {
    'airways_short': ['4', '27'],
    'marine_short': ['1', '5', '8'],
    'gastro_short': ['12', '34'],
}


rule all:
    input:
        expand(os.path.join(OUTDIR, "{dataset}", "catalogue.fna.gz"), dataset=DATASETS),
        expand(os.path.join(OUTDIR, "{dataset}", "bam_files/{sample}_sorted.bam"),
        dataset=DATASETS,
        sample=[sample for dataset in DATASETS for sample in SAMPLES.get(dataset, [])]) 
        


for dataset in DATASETS:

    rule concatenate:
        input:
            expand(os.path.join(OUTDIR_TMP, dataset, "{sample}_anonymous_gsa.fasta"), sample=SAMPLES.get(dataset, []))
        output:
            os.path.join(OUTDIR, dataset, "catalogue.fna.gz")
        conda:
            "cami2_environment.yml"
        shell:
            """
            python src/concatenate.py {output} {input}
            """


    rule alignment:
        input:
            read=expand(os.path.join(OUTDIR_TMP, dataset, "{sample}_anonymous_reads.fq.gz"),sample=SAMPLES.get(dataset, [])),
            catalogue=os.path.join(OUTDIR, dataset, "catalogue.fna.gz")
        output:
            os.path.join(OUTDIR, dataset, "bam_files/{sample}_sorted.bam", sample=sample=SAMPLES.get(dataset, []))
        threads:
            8
        conda:
            "cami2_environment.yml"
        shell:
            """
            strobealign -t {threads} {input.catalogue} {input.read} | samtools sort -o {output}
            """
    


        
        # rule alignment:
        #     input:
        #         r1=os.path.join(OUTDIR,DATASET, "knead/{sample}/{sample}_1_kneaddata_paired_1.fastq"),
        #         r2=os.path.join(OUTDIR,DATASET, "knead/{sample}/{sample}_1_kneaddata_paired_2.fastq"),
        #         contig_catalouge=os.path.join(OUTDIR,DATASET,"global_contig_catalogue.fna.gz")
        #     output:
        #         os.path.join(OUTDIR, DATASET, "algn/{sample}_sorted.bam"),
        #     benchmark:
        #         "benchmarks/alignment/{sample}.txt"
        #     threads:
        #         8
        #     conda:
        #         os.path.join(OUTDIR, "envs/strobealign.yaml")
        #     shell:
        #         """
        #         strobealign -t {threads} {input.contig_catalouge} {input.r1} {input.r2} | samtools sort -o {output}
        #         """
    

